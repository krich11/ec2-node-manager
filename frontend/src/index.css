@tailwind base;
@tailwind components;
@tailwind utilities;

/* Dashboard animation */
@keyframes dashedLineAnimation {
  to {
    stroke-dashoffset: -20;
  }
}

/* Edge styles */
.active-edge {
  stroke: #10B981 !important;
  stroke-width: 2 !important;
  stroke-dasharray: 5 !important;
}

.error-edge {
  stroke: #EF4444 !important;
  stroke-width: 2 !important;
}

.warning-edge {
  stroke: #F59E0B !important;
  stroke-width: 2 !important;
}

.idle-edge {
  stroke: #888 !important;
  stroke-width: 2 !important;
}

.animated-edge {
  animation: dashedLineAnimation 1s linear infinite;
}

/* Make the draggable class explicitly enable dragging */
.react-flow__node-draggable {
  cursor: grab;
  pointer-events: all;
}

/* Ensure elements marked with nodrag don't trigger dragging */
.nodrag {
  pointer-events: all !important;
  cursor: pointer !important;
}

/* Node status styles */
.node-idle {
  border: 1px solid #4B5563;
  background-color: #1F2937;
  color: #D1D5DB;
}

.node-running {
  border: 1px solid #10B981;
  background-color: #065F46;
  color: #A7F3D0;
}

.node-warning {
  border: 1px solid #F59E0B;
  background-color: #92400E;
  color: #FDE68A;
}

.node-error {
  border: 1px solid #EF4444;
  background-color: #991B1B;
  color: #FCA5A5;
}

/* Basic styling for the visible source handle at the center */
.center-handle.source-handle-style {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: rgba(34, 139, 230, 0.5);
  border-radius: 70%;
  border: none;
  z-index: 20;
  pointer-events: all;
  cursor: crosshair;
  transform: translate(-50%, -50%);
}

/* Style for the target handle that covers the node */
.center-handle.target-handle-style {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: transparent;
  border-radius: 0.5rem;
  border: none;
  z-index: 19;
  pointer-events: all;
  cursor: grab;
}

/* Ensure node content is clickable above handle */
.node-label, 
.custom-node .opacity-60.cursor-pointer {
  position: relative;
  z-index: 15;
}

/* Handle style when connecting - make it highlight */
.react-flow__handle.connecting {
  background-color: rgba(34, 139, 230, 0.8);
}

/* Ensure valid drop targets show highlight */
.react-flow__handle.connectable {
  cursor: crosshair;
}

/* Override any React Flow default styles that might interfere */
.react-flow__handle {
  pointer-events: all;
}

/* Fix for ReactFlow edges and connections */
.react-flow__edge-path,
.react-flow__connection-path {
  stroke-width: 2;
}

/* Ensure edges are under nodes */
.react-flow__edge {
  z-index: 5;
}

/* Make node selected state more visible */
.react-flow__node.selected {
  box-shadow: 0 0 0 2px #3182ce;
  border-radius: 0.5rem;
}

/* Context menu styles */
.node-context-menu {
  position: fixed;
  background-color: #374151;
  border-radius: 4px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
  z-index: 1000;
}

.context-menu-item {
  padding: 6px 12px;
  cursor: pointer;
  white-space: nowrap;
  font-size: 16px;
  color: white;
}

.context-menu-item:hover {
  background-color: #4B5563;
}

/* Debug panel styles */
.debug-panel {
  position: absolute;
  right: 20px;
  top: 20px;
  background-color: rgba(0, 0, 0, 0.7);
  padding: 8px;
  border-radius: 4px;
  color: white;
  z-index: 100;
}

.debug-toggle {
  background-color: #4B5563;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 4px 8px;
  cursor: pointer;
  font-size: 12px;
  transition: background-color 0.2s;
}

.debug-toggle:hover {
  background-color: #6B7280;
}

.debug-toggle.active {
  background-color: #10B981;
}


/* Status window styles for draggable functionality */
.drag-handle {
  cursor: grab;
  user-select: none;
}

.drag-handle:active {
  cursor: grabbing;
}

/* Visual indicator that the header is draggable */
.drag-handle:hover {
  background-color: rgba(0, 0, 0, 0.1);
}
